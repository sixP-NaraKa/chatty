generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  user_id       Int             @id @default(autoincrement())
  display_name  String          @unique(map: "display_name_unique")
  creation_date DateTime        @default(now()) @db.Timestamp(6)
  password      String
  chat_messages chat_messages[]
  participants  participants[]
}

model chat_messages {
  msg_id      Int       @id @default(autoincrement())
  posted_at   DateTime  @default(now()) @db.Timestamp(6)
  msg_content String
  user_id     Int
  chatroom_id Int
  chatrooms   chatrooms @relation(fields: [chatroom_id], references: [chatroom_id], onDelete: NoAction, onUpdate: NoAction, map: "chatroom_id_fk")
  users       users     @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "user_id_fk")
}

model chatrooms {
  chatroom_id   Int             @id @default(autoincrement())
  name          String?
  isgroup       Boolean
  created_by    Int?
  created_at    DateTime?       @default(now()) @db.Timestamp(6)
  chat_messages chat_messages[]
  participants  participants[]
}

model participants {
  p_id        Int       @id @default(autoincrement())
  user_id     Int
  chatroom_id Int
  chatrooms   chatrooms @relation(fields: [chatroom_id], references: [chatroom_id], onDelete: NoAction, onUpdate: NoAction, map: "chatroom_id_fk")
  users       users     @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction, map: "user_id_fk")
}
